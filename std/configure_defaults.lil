#configure {
    out: #arg { name: "out"; default: null };
    buildPath: "lil_build_tmp";
    printOnly: #arg { name: "print-only"; default: false };
    format: #arg { name: "format"; default: "o" }; //o, ll or s
    singleFile: #arg { name: "single-file"; default: false };
    isMain: #arg { name: "is-main"; default: true };
    compile: #arg { name: "compile"; default: true };
    link: #arg { name: "link"; default: true };
    run: #arg { name: "run"; default: false };
    isApp: #arg { name: "isApp"; default: "auto" };
    autoMainFn: #arg { name: "auto-main-fn"; default: true };
    automaticFullScreen: #arg { name: "automaticFullScreen"; default: false };
    documentation: false;
    optimize: 1;
    importStdLil: #arg { name: "import-std-lil"; default: true };
    debugStdLil: #arg { name: "debug-std-lil"; default: false };
    stdLilPath: #arg { name: "std-lil-path"; default: "%compilerDir/std/lil.lil" };
    linkerFlags: #arg { name: "linker-flags"; default: "-lc" };
    imports: #arg { name: "init-import-path"; default: "%compilerDir/std/init.lil" };
    memorySize: 268435456; //in bytes, 256 MB by default (not used yet)

    objExt: ".o";
    exeExt: "";

    name: #arg { name: "name"; default: "My App" };

    //set this to the name of the build settings to use
    build: #arg { name: "build"; default: "debug" };

    //if the target is auto, it will be autodetected
    target: #arg { name: "target"; default: "auto" };

    //audio settings
    audioSamplesPerSecond: 44100i32;
    audioBitsPerSample: 16i32;
    audioBytesPerFrame: 4i32;
    audioBufferSeconds: 2i32;

    builds {
        debug {
            optimize: #arg { name: "optimize"; default: 1 };
            buildPath: #arg { name: "build-path"; default: "lil_build_tmp/debug" };
            constants+: "DEBUG_BUILD";
        }

        release {
            optimize: #arg { name: "optimize"; default: 3 };
            buildPath: #arg { name: "build-path"; default: "lil_build_tmp/release" };
            constants+: "RELEASE_BUILD";
        }

        docs {
            compile: false;
            documentation: true;
        }
    }
    
    targets {
        windows {
            suffix: #arg { name: "suffix"; default: "OS_WINDOWS" };
            constants+: "OS_WINDOWS";
            objExt: ".obj";
            exeExt: ".exe";
        }
        linux {
            suffix: #arg { name: "suffix"; default: "OS_LINUX" };
            constants+: "OS_LINUX";
        }
        mac {
            suffix: #arg { name: "suffix"; default: "OS_MAC" };
            constants+: "OS_MAC";
            minOSVersion: #arg { name: "minOSVersion"; default: "10.12" };
            cpu: #arg { name: "cpu"; default: "x86_64" };
            vendor: #arg { name: "vendor"; default: "apple-macos%minOSVersion"};
            linkerFlags +: "-macosx_version_min %minOSVersion";
            linkerFlags +: "-framework Cocoa";

            linkerFlagsApp:
                "std_lil_mac.o",
                "-lc",
                "-framework Cocoa",
                "-framework AudioToolbox",
                "-framework IOKit",
                "-framework CoreVideo",
                "-framework QuartzCore",
                "-framework Metal",
                "-macosx_version_min %minOSVersion";
            appBuildSteps:
                'mkdir -p "%name.app/Contents/MacOS"',
                'mkdir -p "%name.app/Contents/Resources"',
                'echo "APPL????" > "%name.app/Contents/PkgInfo"',
                'echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">
<plist version=\"1.0\">
<dict>
        <key>CFBundleDevelopmentRegion</key>
        <string>English</string>
        <key>CFBundleExecutable</key>
        <string>%name</string>
        <key>CFBundleInfoDictionaryVersion</key>
        <string>6.0</string>
        <key>CFBundlePackageType</key>
        <string>APPL</string>
        <key>CFBundleSignature</key>
        <string>????</string>
        <key>CFBundleVersion</key>
        <string>1.0</string>
        <key>NSPrincipalClass</key>
        <string>NSApplication</string>
        <key>NSHighResolutionCapable</key>
        <string>True</string>
</dict>
</plist>" > "%name.app/Contents/Info.plist"',
                'cp %buildPath/%out "%name.app/Contents/MacOS/%name"'
            ; //linkerFlagsApp

            runCommand: '%buildPath/"%out"';
            runCommandApp: './"%name.app/Contents/MacOS/%name"'
        }
        ios {
            suffix: "OS_IOS";
            constants+: "OS_IOS";
            minOSVersion: #arg { name: "minOSVersion"; default: "10.2" };
            cpu: #arg { name: "cpu"; default: "arm64" };
            vendor: #arg { name: "vendor"; default: "apple-ios%minOSVersion"};
            linkerFlags: "-r";
            linkerFlagsApp: "-r";
        }
        iosSimulator {
            suffix: "OS_IOS";
            constants+: "OS_IOS";
            minOSVersion: #arg { name: "minOSVersion"; default: "10.2" };
            cpu: #arg { name: "cpu"; default: "x86_64" };
            vendor: #arg { name: "vendor"; default: "apple-ios%minOSVersion-simulator"};
            linkerFlags: "-r";
            linkerFlagsApp: "-r";
        }
        android {
            suffix: "OS_ANDROID";
            constants+: "OS_ANDROID";
            cpu: #arg { name: "cpu"; default: "arm64" };
            vendor: #arg { name: "vendor"; default: "unkown-elf"};
        }
    }
};
